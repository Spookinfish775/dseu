export const dataApi = {
  UserPhotoHash:
    process.env.NODE_ENV === "production"
      ? document.location.origin + "/StaticFiles/Employees/Thumbnails/"
      : `${process.env.SERVER_URL}/StaticFiles/Employees/Thumbnails/`,
  OidcConfiguration: `/_configuration/${process.env.oidcClientId}`,
  stringParser: {
    realEstate: "/api/StringParser/realEstate",
    territorialUnit: "/api/StringParser/territorialUnit",
    applicant: "/api/StringParser/applicant",
    officialDocument: "/api/StringParser/officialDocument"
  },
  download: {
    registrationStatement: "/api/RegistrationStatement/GetFile",
    suspendStatement: "/api/SuspendStatement/GetFile",
    registrationService: "/api/RegistrationService/GetFile",
    changeStatement: "/api/ChangeStatement/GetFile",
    giveInformationStatement: "/api/GiveInformationStatement/GetFile",
    legalAidStatement: "/api/LegalAidStatement/GetFile",
    confirmationStatement: "/api/ConfirmationStatement/GetFile",
    notification: "/api/Notification/GetFile",
    giveInformationService: "/api/GiveInformationService/GetFile",
    confirmationService: "/api/ConfirmationService/GetFile",
    changeService: "/api/ChangeService/GetFile",
    suspendService: "/api/SuspendService/GetFile",
    refusalService: "/api/RefusalService/GetFile",
    caseBook: "/api/CaseBook/GetFile",
    case: "/api/Case/GetFile",
  },
  getHtml: {
    registrationStatement: "/api/RegistrationStatement/GetHtml",
    suspendStatement: "/api/SuspendStatement/GetHtml",
    registrationService: "/api/RegistrationService/GetHtml",
    changeStatement: "/api/ChangeStatement/GetHtml",
    giveInformationStatement: "/api/GiveInformationStatement/GetHtml",
    legalAidStatement: "/api/LegalAidStatement/GetHtml",
    confirmationStatement: "/api/ConfirmationStatement/GetHtml",
    notification: "/api/Notification/GetHtml",
    caseBook: "/api/CaseBook/GetHtml",
    case: "/api/Case/GetHtml",
    giveInformationService: "/api/GiveInformationService/GetHtml",
    confirmationService: "/api/ConfirmationService/GetHtml",
    changeService: "/api/ChangeService/GetHtml",
    suspendService: "/api/SuspendService/GetHtml",
    refusalService: "/api/RefusalService/GetHtml"
  },
  statements: {
    statement: "/api/Statement",
    registrationStatement: "/api/RegistrationStatement",
    suspendStatement: "/api/SuspendStatement",
    legalAidStatement: "/api/LegalAidStatement",
    giveInformationStatement: "/api/GiveInformationStatement",
    confirmationStatement: "/api/ConfirmationStatement",
    changeStatement: "/api/ChangeStatement"
  },
  services: {
    service: "/api/Service",
    registrationService: "/api/RegistrationService",
    refusalService: "/api/RefusalService",
    confirmationService: "/api/ConfirmationService",
    giveInformationService: "/api/GiveInformationService",
    legalAidService: "/api/LegalAidService",
    suspendService: "/api/SuspendService",
    changeService: "/api/ChangeService"
  },
  realEstatePart: "/api/RealEstatePart",
  certificateReceiver: "/api/CertificateReceiver",
  account: `/Identity/Account/Manage`,
  user: "/api/User",
  employmentWorkplaceOrder: "/api/EmploymentWorkplaceOrder",
  userBranch: "/api/User/branch",
  jobTitle: "/api/JobTitle",
  district: "/api/District",
  region: "/api/Region",
  organization: "/api/Organization",
  workplace: "/api/Workplace",
  userWorkplace: "/api/UserWorkplace",
  search: "/api/Search",
  role: "/api/Role",
  citizenship: "/api/Citizenship",
  law: "/api/Law",
  agencyPaymentService: "/api/AgencyPaymentService",
  stamp: "/api/Stamp",
  userStamp: "/api/User/stamp",
  getRegistrationNumber: "/api/GetRegistrationNumber",

  currency: "/api/Currency",
  realEstateMission: "/api/RealEstateMission",
  territorialUnit: "/api/TerritorialUnit",
  baseAmount: "/api/BaseAmount",
  governmentDuty: "/api/GovernmentDuty",
  governmentDutyGroup: "/api/GovernmentDutyGroup",
  identityDocumentType: "/api/IdentityDocumentType",
  IdentityDocumentSeries: "/api/IdentityDocumentSeries",
  documentContent: "/api/DocumentContent",
  history: "/api/History",
  chapterNumberRegistrationStatement:
    "/api/ChapterNumber/registrationStatement",
  chapterNumberRegistrationService: "/api/ChapterNumber/registrationService",
  blank: "/api/Blank",
  transferBlank: "/api/BlankTransfer",
  blankDestroy: "/api/BlankDestroy",
  land: "/api/Land",
  realEstate: "/api/RealEstate",
  realEstateClose: "/api/RealEstate/close",
  realEstatePart: "/api/RealEstatePart",
  applicant: "/api/Applicant",
  prepayment: "/api/Prepayment",
  payment: "/api/Payment",
  books: "/api/Book",
  userBooks: "/api/UserBook",
  bookChapters: "/api/BookChapters",
  chapterNumber: "/api/ChapterNumber",
  letterSenderOrganization: "/api/LetterSenderOrganization",
  letterSenderOrganizationType: "/api/LetterSenderOrganizationType",
  officialDocumentName: "/api/OfficialDocumentName",
  encumbranceLetter: "/api/EncumbranceLetter",
  encumbranceRelease: "/api/EncumbranceRelease",
  userByOrganization: "/api/User/organization/",
  case: "/api/Case",
  userCase: "/api/Case/user",
  caseRelationship: "/api/CaseRelationship",
  caseBook: "/api/CaseBook",
  nation: "/api/Nation",

  uploadedDocument: "/api/UploadedDocument",
  archive: "/api/Archive",
  notification: "/api/Notification",
  refusalLaw: "/api/RefusalLaw",
  refusalReason: "/api/RefusalReason",
  transmissionJournal: "/api/TransmissionJournal",
  transmissionJournalByArchive: "/api/TransmissionJournal/archive",
  confirmation: "/api/Confirmation",
  analysisProcess: "/api/AnalysisProcess",
  analyticalAction: "/api/AnalyticalAction",
  fileCabinet: "/api/FileCabinet",
  report: "/api/Report",

  qrCodeDocument: "/api/QrCode",
  specialApplicantType: "/api/SpecialApplicantType",
  specialApplicant: "/api/SpecialApplicant",
  specialApplicantPost: "/api/SpecialApplicant",

  reportByAllUser: "/api/Report/getByAllUser",
  reportByBlank: "/api/Report/getByBlank",
  reportByBranch: "/api/Report/getByBranch",
  reportByDuty: "/api/Report/getByDuty",
  reportByNotification: "/api/Report/byNotification",

  reportTable: {
    getExcelFile: "/api/ReportTable/GetExcelFile",
    type01: "/api/ReportTable/type01",
    type02: "/api/ReportTable/type02",
    type03: "/api/ReportTable/type03",
    type04: "/api/ReportTable/type04",
    type05: "/api/ReportTable/type05",
    type06: "/api/ReportTable/type06",
    type33: "/api/ReportTable/type33",
    type77: "/api/ReportTable/type77",
    type81: "/api/ReportTable/type81",
  },

  dashBoard: "/api/Report/getGrafnaDashbords",

  dataMigration: {
    index: "/api/OldDataMigration",
    applicant: "/api/OldDataMigration/applicant",
    realEstate: "/api/OldDataMigration/realEstate",
    uploadMigration: "/api/OldDataMigration/fromExcel",
    uploadedFiles: "/api/OldDataMigration/file",
  },
};
